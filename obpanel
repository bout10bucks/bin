#!/bin/bash
{
# date / time
clock() {
	date=$(date +"%A %B %d %H:%M")
	echo -n "$date"
}

# packages
aur() {
	acnt=$(cower -u | wc -l)
	if [ -z $acnt ]; then
	acnt=0
	fi
	echo -n "$acnt"
}
pac () {
	pcnt=$(pacman -Qu | wc -l)
	if [ -z $pcnt ]; then
	pcnt=0
	fi
	echo -n "$pcnt"
}
# network
# Show network statistics for all active interfaces found.

net() {
	type ifstat >/dev/null 2>&1
	if [ "$?" -ne 0 ]; then
		return 1
	fi

	sed="sed"
	type gsed >/dev/null 2>&1
	if [ "$?" -eq 0 ]; then
		sed="gsed"
	fi

	data=$(ifstat -z -S -q 1 1)
	interfaces=$(echo -e "${data}" | head -n 1)
	flow_data=$(echo -e "${data}" | tail -n 1 | ${sed} "s/\s\{1,\}/,/g")
	index=1
	for inf in ${interfaces}; do
		type=""
		case ${inf} in
			eth*) type="⎆"
				;;
			wl*) type="☫"
				;;
			en*) type=" "
				;;
		esac
		if [ -n "${type}" ]; then
			formate=$(echo "${formate} ${type} ⇊ %.2f ⇈ %.2f")
			holder=$(echo "${holder},\$$((index)),\$$((index+1))")
		fi
		index=$((index+2))
	done
	if [ -n "${formate}" ]; then
		echo $(echo "${flow_data#,}" | awk -F"," "{printf(\"${formate}\"${holder})}")
	fi
	return 0
}

while true; do
	printf "%s\n" "\\r $(clock) \\c $(net) \\l AUR:$(aur) PAC:$(pac)"
	sleep 1;
done
} 2> /dev/null
